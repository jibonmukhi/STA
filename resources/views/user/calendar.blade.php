@extends('layouts.advanced-dashboard')

@section('page-title', 'My Calendar')

@section('content')
<div class="container-fluid">
    <div class="row">
        <!-- Calendar Header -->
        <div class="col-12 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h4 class="card-title mb-1">My Calendar</h4>
                            <p class="text-muted mb-0">Manage your schedule and appointments</p>
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-outline-primary" onclick="goToPreviousMonth()">
                                <i class="fas fa-chevron-left"></i>
                            </button>
                            <button class="btn btn-primary" onclick="goToToday()">Today</button>
                            <button class="btn btn-outline-primary" onclick="goToNextMonth()">
                                <i class="fas fa-chevron-right"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Calendar View Controls -->
        <div class="col-12 mb-3">
            <div class="card">
                <div class="card-body py-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="mb-0" id="currentMonth">{{ date('F Y') }}</h5>
                        </div>
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-outline-secondary active" onclick="changeView('month')">Month</button>
                            <button type="button" class="btn btn-outline-secondary" onclick="changeView('week')">Week</button>
                            <button type="button" class="btn btn-outline-secondary" onclick="changeView('day')">Day</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Calendar -->
        <div class="col-lg-9">
            <div class="card">
                <div class="card-body p-0">
                    <!-- Calendar Grid -->
                    <div id="calendar-container">
                        <table class="table table-bordered mb-0" id="calendar-table">
                            <thead class="bg-primary text-white">
                                <tr>
                                    <th class="text-center py-3">Sunday</th>
                                    <th class="text-center py-3">Monday</th>
                                    <th class="text-center py-3">Tuesday</th>
                                    <th class="text-center py-3">Wednesday</th>
                                    <th class="text-center py-3">Thursday</th>
                                    <th class="text-center py-3">Friday</th>
                                    <th class="text-center py-3">Saturday</th>
                                </tr>
                            </thead>
                            <tbody id="calendar-body">
                                <!-- Calendar cells will be generated by JavaScript -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar - Events & Quick Actions -->
        <div class="col-lg-3">
            <!-- Mini Calendar -->
            <div class="card mb-3">
                <div class="card-header">
                    <h6 class="card-title mb-0">Mini Calendar</h6>
                </div>
                <div class="card-body p-2">
                    <div id="mini-calendar" class="mini-calendar">
                        <!-- Mini calendar will be generated by JavaScript -->
                    </div>
                </div>
            </div>

            <!-- Today's Events -->
            <div class="card mb-3">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6 class="card-title mb-0">Today's Events</h6>
                    <button class="btn btn-sm btn-outline-primary" onclick="addEvent()">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
                <div class="card-body">
                    <div id="todays-events">
                        <div class="event-item mb-2 p-2 border-left border-primary bg-light">
                            <div class="fw-bold text-sm">Team Meeting</div>
                            <div class="text-muted small">10:00 AM - 11:00 AM</div>
                        </div>
                        <div class="event-item mb-2 p-2 border-left border-success bg-light">
                            <div class="fw-bold text-sm">Lunch Break</div>
                            <div class="text-muted small">12:00 PM - 1:00 PM</div>
                        </div>
                        <div class="event-item mb-2 p-2 border-left border-warning bg-light">
                            <div class="fw-bold text-sm">Project Review</div>
                            <div class="text-muted small">3:00 PM - 4:00 PM</div>
                        </div>
                        <div class="text-center mt-3">
                            <small class="text-muted">No more events for today</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Calendar Legend -->
            <div class="card">
                <div class="card-header">
                    <h6 class="card-title mb-0">Legend</h6>
                </div>
                <div class="card-body">
                    <div class="legend-item d-flex align-items-center mb-2">
                        <div class="legend-color bg-primary me-2" style="width: 12px; height: 12px; border-radius: 2px;"></div>
                        <small>Meetings</small>
                    </div>
                    <div class="legend-item d-flex align-items-center mb-2">
                        <div class="legend-color bg-success me-2" style="width: 12px; height: 12px; border-radius: 2px;"></div>
                        <small>Personal</small>
                    </div>
                    <div class="legend-item d-flex align-items-center mb-2">
                        <div class="legend-color bg-warning me-2" style="width: 12px; height: 12px; border-radius: 2px;"></div>
                        <small>Work Tasks</small>
                    </div>
                    <div class="legend-item d-flex align-items-center mb-2">
                        <div class="legend-color bg-info me-2" style="width: 12px; height: 12px; border-radius: 2px;"></div>
                        <small>Reminders</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Event Modal -->
<div class="modal fade" id="eventModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="eventModalTitle">Add Event</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="eventForm">
                    <div class="mb-3">
                        <label for="eventTitle" class="form-label">Event Title</label>
                        <input type="text" class="form-control" id="eventTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="eventDate" class="form-label">Date</label>
                        <input type="date" class="form-control" id="eventDate" required>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label for="eventStartTime" class="form-label">Start Time</label>
                            <input type="time" class="form-control" id="eventStartTime">
                        </div>
                        <div class="col-md-6">
                            <label for="eventEndTime" class="form-label">End Time</label>
                            <input type="time" class="form-control" id="eventEndTime">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="eventCategory" class="form-label">Category</label>
                        <select class="form-select" id="eventCategory">
                            <option value="meeting">Meeting</option>
                            <option value="personal">Personal</option>
                            <option value="work">Work Task</option>
                            <option value="reminder">Reminder</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="eventDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="eventDescription" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveEvent()">Save Event</button>
            </div>
        </div>
    </div>
</div>

<style>
    .calendar-day {
        height: 120px;
        vertical-align: top;
        position: relative;
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .calendar-day:hover {
        background-color: rgba(79, 70, 229, 0.05) !important;
    }

    .calendar-day.today {
        background-color: rgba(79, 70, 229, 0.1) !important;
    }

    .calendar-day.other-month {
        color: #ccc;
        background-color: #f8f9fa;
    }

    .day-number {
        font-weight: bold;
        margin-bottom: 5px;
    }

    .event-item {
        border-left: 3px solid;
        font-size: 0.75rem;
        padding: 2px 5px;
        margin-bottom: 2px;
        border-radius: 2px;
    }

    .event-item.meeting {
        border-color: #007bff;
        background-color: rgba(0, 123, 255, 0.1);
    }

    .event-item.personal {
        border-color: #28a745;
        background-color: rgba(40, 167, 69, 0.1);
    }

    .event-item.work {
        border-color: #ffc107;
        background-color: rgba(255, 193, 7, 0.1);
    }

    .event-item.reminder {
        border-color: #17a2b8;
        background-color: rgba(23, 162, 184, 0.1);
    }

    .mini-calendar {
        font-size: 0.75rem;
    }

    .mini-calendar table {
        width: 100%;
    }

    .mini-calendar td {
        text-align: center;
        padding: 2px;
        cursor: pointer;
    }

    .mini-calendar td:hover {
        background-color: rgba(79, 70, 229, 0.1);
    }

    .mini-calendar .today {
        background-color: #4f46e5;
        color: white;
        border-radius: 50%;
    }
</style>

<script>
    let currentDate = new Date();
    let currentView = 'month';
    let events = [
        { id: 1, title: 'Team Meeting', date: new Date(), startTime: '10:00', endTime: '11:00', category: 'meeting' },
        { id: 2, title: 'Lunch Break', date: new Date(), startTime: '12:00', endTime: '13:00', category: 'personal' },
        { id: 3, title: 'Project Review', date: new Date(), startTime: '15:00', endTime: '16:00', category: 'work' }
    ];

    function generateCalendar() {
        const year = currentDate.getFullYear();
        const month = currentDate.getMonth();

        // Update month display
        document.getElementById('currentMonth').textContent =
            new Intl.DateTimeFormat('en-US', { month: 'long', year: 'numeric' }).format(currentDate);

        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);
        const startDate = new Date(firstDay);
        startDate.setDate(startDate.getDate() - firstDay.getDay());

        const tbody = document.getElementById('calendar-body');
        tbody.innerHTML = '';

        for (let week = 0; week < 6; week++) {
            const row = document.createElement('tr');

            for (let day = 0; day < 7; day++) {
                const cellDate = new Date(startDate);
                cellDate.setDate(startDate.getDate() + (week * 7 + day));

                const cell = document.createElement('td');
                cell.className = 'calendar-day p-2';
                cell.onclick = () => selectDate(cellDate);

                if (cellDate.getMonth() !== month) {
                    cell.classList.add('other-month');
                }

                if (isToday(cellDate)) {
                    cell.classList.add('today');
                }

                const dayNumber = document.createElement('div');
                dayNumber.className = 'day-number';
                dayNumber.textContent = cellDate.getDate();
                cell.appendChild(dayNumber);

                // Add events for this date
                const dayEvents = events.filter(event =>
                    event.date.toDateString() === cellDate.toDateString()
                );

                dayEvents.forEach(event => {
                    const eventEl = document.createElement('div');
                    eventEl.className = `event-item ${event.category}`;
                    eventEl.textContent = event.title;
                    eventEl.onclick = (e) => {
                        e.stopPropagation();
                        viewEvent(event);
                    };
                    cell.appendChild(eventEl);
                });

                row.appendChild(cell);
            }

            tbody.appendChild(row);
        }

        generateMiniCalendar();
    }

    function generateMiniCalendar() {
        const miniCalendar = document.getElementById('mini-calendar');
        const year = currentDate.getFullYear();
        const month = currentDate.getMonth();

        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);
        const startDate = new Date(firstDay);
        startDate.setDate(startDate.getDate() - firstDay.getDay());

        let html = '<table class="table table-sm mb-0"><tbody>';

        for (let week = 0; week < 6; week++) {
            html += '<tr>';
            for (let day = 0; day < 7; day++) {
                const cellDate = new Date(startDate);
                cellDate.setDate(startDate.getDate() + (week * 7 + day));

                let classes = '';
                if (cellDate.getMonth() !== month) classes += 'text-muted ';
                if (isToday(cellDate)) classes += 'today ';

                html += `<td class="${classes}" onclick="goToDate('${cellDate.toISOString()}')">${cellDate.getDate()}</td>`;
            }
            html += '</tr>';
        }

        html += '</tbody></table>';
        miniCalendar.innerHTML = html;
    }

    function isToday(date) {
        const today = new Date();
        return date.toDateString() === today.toDateString();
    }

    function goToPreviousMonth() {
        currentDate.setMonth(currentDate.getMonth() - 1);
        generateCalendar();
    }

    function goToNextMonth() {
        currentDate.setMonth(currentDate.getMonth() + 1);
        generateCalendar();
    }

    function goToToday() {
        currentDate = new Date();
        generateCalendar();
    }

    function goToDate(dateString) {
        currentDate = new Date(dateString);
        generateCalendar();
    }

    function changeView(view) {
        currentView = view;
        document.querySelectorAll('.btn-group .btn').forEach(btn => btn.classList.remove('active'));
        event.target.classList.add('active');

        // In a real implementation, you would switch between different calendar views here
        alert(`Switching to ${view} view - this would be implemented in a full calendar widget`);
    }

    function selectDate(date) {
        document.getElementById('eventDate').value = date.toISOString().split('T')[0];
        addEvent();
    }

    function addEvent() {
        document.getElementById('eventModalTitle').textContent = 'Add Event';
        document.getElementById('eventForm').reset();

        // Set today's date if no date is selected
        if (!document.getElementById('eventDate').value) {
            document.getElementById('eventDate').value = new Date().toISOString().split('T')[0];
        }

        new bootstrap.Modal(document.getElementById('eventModal')).show();
    }

    function saveEvent() {
        const title = document.getElementById('eventTitle').value;
        const date = new Date(document.getElementById('eventDate').value);
        const startTime = document.getElementById('eventStartTime').value;
        const endTime = document.getElementById('eventEndTime').value;
        const category = document.getElementById('eventCategory').value;
        const description = document.getElementById('eventDescription').value;

        if (!title || !date) {
            alert('Please fill in the required fields');
            return;
        }

        const newEvent = {
            id: events.length + 1,
            title,
            date,
            startTime,
            endTime,
            category,
            description
        };

        events.push(newEvent);
        generateCalendar();

        bootstrap.Modal.getInstance(document.getElementById('eventModal')).hide();

        // Show success message
        alert('Event added successfully!');
    }

    function viewEvent(event) {
        alert(`Event: ${event.title}\nTime: ${event.startTime} - ${event.endTime}\nCategory: ${event.category}`);
    }

    // Initialize calendar on page load
    document.addEventListener('DOMContentLoaded', function() {
        generateCalendar();
    });
</script>
@endsection